{"version":3,"sources":["shufflejs/dist/shuffle.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","default","_interopRequireDefault","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","toArray","arrayLike","Array","prototype","slice","arrayMax","array","Math","max","apply","arrayIncludes","arguments","length","indexOf","Object","defineProperty","value","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_matchesSelector","_matchesSelector2","_arrayUniq","_arrayUniq2","_xtend","_xtend2","_throttleit","_throttleit2","_arrayParallel","_arrayParallel2","_point","_point2","_shuffleItem","_shuffleItem2","_classes","_classes2","_getNumberStyle","_getNumberStyle2","_sorter","_sorter2","_onTransitionEnd","_layout2","Shuffle","element","options","undefined","useSizer","lastSort","group","lastFilter","ALL_ITEMS","isEnabled","isDestroyed","isInitialized","_transitions","isTransitioning","_queue","_getElementOption","_init","items","_getItems","sizer","classList","add","Classes","BASE","_initItems","_onResize","_getResizeFunction","window","addEventListener","containerCss","getComputedStyle","containerWidth","getSize","width","_validateStyles","_setColumns","filter","initialSort","offsetWidth","_setTransitions","style","transition","speed","easing","resizeFunction","_handleResize","bind","throttle","throttleTime","option","querySelector","nodeType","jquery","styles","position","overflow","category","collection","set","_getFilteredSets","_toggleFilterClasses","_this","visible","hidden","forEach","item","_doesPassFilter","push","attr","getAttribute","FILTER_ATTRIBUTE_KEY","keys","delimeter","split","JSON","parse","isArray","some","_ref","show","hide","init","dispose","visibleItems","_getFilteredItems","str","useTransforms","_this2","children","el","itemSelector","map","by","isVisible","gutterSize","size","columnWidth","gutterWidth","gutter","_getGutterSize","_getColumnSize","calculatedColumns","abs","round","columnThreshold","cols","floor","colWidth","height","_getContainerSize","positions","index","min","staggerAmount","staggerAmountMax","name","details","shuffle","dispatchEvent","CustomEvent","bubbles","cancelable","detail","_this3","count","callback","transitionDelay","applyCss","Css","VISIBLE","after","currPos","point","currScale","scale","itemSize","pos","_getItemPosition","equals","Scale","before","_getStaggerAmount","getItemPosition","gridSize","total","threshold","buffer","_this4","_getConcealedItems","HIDDEN","update","_ref2","x","y","transform","left","top","itemCallback","done","onTransitionEnd","evt","opts","_this5","_getStylesForTransition","_whenTransitionDone","_cancelMovement","hasSpeed","hasQueue","_startTransitions","_styleImmediately","_dispatchLayout","transitions","_this6","callbacks","_getTransitionFunction","_movementFinished","cancelTransitionEnd","objects","_this7","elements","_skipTransitions","_dispatch","EventType","LAYOUT","sortObj","_filter","_shrink","_updateItemCount","sort","_resetCols","_layout","_processQueue","_setContainerSize","isOnlyLayout","newItems","concat","_updateItemsOrder","isUpdateLayout","_this8","oldItems","getItemByElement","handleLayout","removeEventListener","_disposeItems","parentNode","removeChild","REMOVED","remove","removeAttribute","includeMargins","marginLeft","marginRight","marginTop","marginBottom","zero","data","duration","transitionDuration","delay","ShuffleItem","__Point","__sorter","__getColumnSpan","getColumnSpan","__getAvailablePositions","getAvailablePositions","__getShortColumn","getShortColumn","e","event","params","document","createEvent","initCustomEvent","Event","match","selector","vendor","nodes","querySelectorAll","proto","Element","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","global","uniqNoSet","arr","ret","uniqSet","seen","Set","has","uniqSetWithForEach","doesForEachActuallyWork","extend","source","hasOwnProperty","func","wait","timeoutID","last","Date","rtn","ctx","args","delta","setTimeout","noop","fns","context","maybeDone","err","result","finished","results","pending","fn","_getNumber","_getNumber2","Point","a","b","getNumber","parseFloat","addClasses","SHUFFLE_ITEM","INITIAL","classes","className","removeClasses","visibility","will-change","opacity","getNumberStyle","_computedSize2","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","_computedSize","body","documentElement","createElement","cssText","appendChild","randomize","tmp","current","random","sorter","defaults","original","revert","valA","valB","reverse","uniqueId","eventName","listener","currentTarget","arrayMin","span","setY","shortColumnIndex","setHeight","itemWidth","columns","columnSpan","ceil","available","minPosition","len"],"mappings":"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","file":"vendor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shuffle\"] = factory();\n\telse\n\t\troot[\"shuffle\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(1).default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(2);\n\t\n\tvar _matchesSelector = __webpack_require__(3);\n\t\n\tvar _matchesSelector2 = _interopRequireDefault(_matchesSelector);\n\t\n\tvar _arrayUniq = __webpack_require__(4);\n\t\n\tvar _arrayUniq2 = _interopRequireDefault(_arrayUniq);\n\t\n\tvar _xtend = __webpack_require__(5);\n\t\n\tvar _xtend2 = _interopRequireDefault(_xtend);\n\t\n\tvar _throttleit = __webpack_require__(6);\n\t\n\tvar _throttleit2 = _interopRequireDefault(_throttleit);\n\t\n\tvar _arrayParallel = __webpack_require__(7);\n\t\n\tvar _arrayParallel2 = _interopRequireDefault(_arrayParallel);\n\t\n\tvar _point = __webpack_require__(8);\n\t\n\tvar _point2 = _interopRequireDefault(_point);\n\t\n\tvar _shuffleItem = __webpack_require__(10);\n\t\n\tvar _shuffleItem2 = _interopRequireDefault(_shuffleItem);\n\t\n\tvar _classes = __webpack_require__(11);\n\t\n\tvar _classes2 = _interopRequireDefault(_classes);\n\t\n\tvar _getNumberStyle = __webpack_require__(12);\n\t\n\tvar _getNumberStyle2 = _interopRequireDefault(_getNumberStyle);\n\t\n\tvar _sorter = __webpack_require__(14);\n\t\n\tvar _sorter2 = _interopRequireDefault(_sorter);\n\t\n\tvar _onTransitionEnd = __webpack_require__(15);\n\t\n\tvar _layout2 = __webpack_require__(16);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction toArray(arrayLike) {\n\t  return Array.prototype.slice.call(arrayLike);\n\t}\n\t\n\tfunction arrayMax(array) {\n\t  return Math.max.apply(Math, array);\n\t}\n\t\n\tfunction arrayIncludes(array, obj) {\n\t  if (arguments.length === 2) {\n\t    return arrayIncludes(array)(obj);\n\t  }\n\t\n\t  return function (obj) {\n\t    return array.indexOf(obj) > -1;\n\t  };\n\t}\n\t\n\t// Used for unique instance variables\n\tvar id = 0;\n\t\n\tvar Shuffle = function () {\n\t\n\t  /**\n\t   * Categorize, sort, and filter a responsive grid of items.\n\t   *\n\t   * @param {Element} element An element which is the parent container for the grid items.\n\t   * @param {Object} [options=Shuffle.options] Options object.\n\t   * @constructor\n\t   */\n\t  function Shuffle(element) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    _classCallCheck(this, Shuffle);\n\t\n\t    this.options = (0, _xtend2.default)(Shuffle.options, options);\n\t\n\t    this.useSizer = false;\n\t    this.lastSort = {};\n\t    this.group = this.lastFilter = Shuffle.ALL_ITEMS;\n\t    this.isEnabled = true;\n\t    this.isDestroyed = false;\n\t    this.isInitialized = false;\n\t    this._transitions = [];\n\t    this.isTransitioning = false;\n\t    this._queue = [];\n\t\n\t    element = this._getElementOption(element);\n\t\n\t    if (!element) {\n\t      throw new TypeError('Shuffle needs to be initialized with an element.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.id = 'shuffle_' + id++;\n\t\n\t    this._init();\n\t    this.isInitialized = true;\n\t  }\n\t\n\t  _createClass(Shuffle, [{\n\t    key: '_init',\n\t    value: function _init() {\n\t      this.items = this._getItems();\n\t\n\t      this.options.sizer = this._getElementOption(this.options.sizer);\n\t\n\t      if (this.options.sizer) {\n\t        this.useSizer = true;\n\t      }\n\t\n\t      // Add class and invalidate styles\n\t      this.element.classList.add(Shuffle.Classes.BASE);\n\t\n\t      // Set initial css for each item\n\t      this._initItems();\n\t\n\t      // Bind resize events\n\t      this._onResize = this._getResizeFunction();\n\t      window.addEventListener('resize', this._onResize);\n\t\n\t      // Get container css all in one request. Causes reflow\n\t      var containerCss = window.getComputedStyle(this.element, null);\n\t      var containerWidth = Shuffle.getSize(this.element).width;\n\t\n\t      // Add styles to the container if it doesn't have them.\n\t      this._validateStyles(containerCss);\n\t\n\t      // We already got the container's width above, no need to cause another\n\t      // reflow getting it again... Calculate the number of columns there will be\n\t      this._setColumns(containerWidth);\n\t\n\t      // Kick off!\n\t      this.filter(this.options.group, this.options.initialSort);\n\t\n\t      // The shuffle items haven't had transitions set on them yet so the user\n\t      // doesn't see the first layout. Set them now that the first layout is done.\n\t      // First, however, a synchronous layout must be caused for the previous\n\t      // styles to be applied without transitions.\n\t      this.element.offsetWidth; // jshint ignore: line\n\t      this._setTransitions();\n\t      this.element.style.transition = 'height ' + this.options.speed + 'ms ' + this.options.easing;\n\t    }\n\t\n\t    /**\n\t     * Returns a throttled and proxied function for the resize handler.\n\t     * @return {Function}\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_getResizeFunction',\n\t    value: function _getResizeFunction() {\n\t      var resizeFunction = this._handleResize.bind(this);\n\t      return this.options.throttle ? this.options.throttle(resizeFunction, this.options.throttleTime) : resizeFunction;\n\t    }\n\t\n\t    /**\n\t     * Retrieve an element from an option.\n\t     * @param {string|jQuery|Element} option The option to check.\n\t     * @return {?Element} The plain element or null.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_getElementOption',\n\t    value: function _getElementOption(option) {\n\t      // If column width is a string, treat is as a selector and search for the\n\t      // sizer element within the outermost container\n\t      if (typeof option === 'string') {\n\t        return this.element.querySelector(option);\n\t\n\t        // Check for an element\n\t      } else if (option && option.nodeType && option.nodeType === 1) {\n\t        return option;\n\t\n\t        // Check for jQuery object\n\t      } else if (option && option.jquery) {\n\t        return option[0];\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Ensures the shuffle container has the css styles it needs applied to it.\n\t     * @param {Object} styles Key value pairs for position and overflow.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_validateStyles',\n\t    value: function _validateStyles(styles) {\n\t      // Position cannot be static.\n\t      if (styles.position === 'static') {\n\t        this.element.style.position = 'relative';\n\t      }\n\t\n\t      // Overflow has to be hidden.\n\t      if (styles.overflow !== 'hidden') {\n\t        this.element.style.overflow = 'hidden';\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Filter the elements by a category.\n\t     * @param {string} [category] Category to filter by. If it's given, the last\n\t     *     category will be used to filter the items.\n\t     * @param {Array} [collection] Optionally filter a collection. Defaults to\n\t     *     all the items.\n\t     * @return {!{visible: Array, hidden: Array}}\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_filter',\n\t    value: function _filter() {\n\t      var category = arguments.length <= 0 || arguments[0] === undefined ? this.lastFilter : arguments[0];\n\t      var collection = arguments.length <= 1 || arguments[1] === undefined ? this.items : arguments[1];\n\t\n\t      var set = this._getFilteredSets(category, collection);\n\t\n\t      // Individually add/remove hidden/visible classes\n\t      this._toggleFilterClasses(set);\n\t\n\t      // Save the last filter in case elements are appended.\n\t      this.lastFilter = category;\n\t\n\t      // This is saved mainly because providing a filter function (like searching)\n\t      // will overwrite the `lastFilter` property every time its called.\n\t      if (typeof category === 'string') {\n\t        this.group = category;\n\t      }\n\t\n\t      return set;\n\t    }\n\t\n\t    /**\n\t     * Returns an object containing the visible and hidden elements.\n\t     * @param {string|Function} category Category or function to filter by.\n\t     * @param {Array.<Element>} items A collection of items to filter.\n\t     * @return {!{visible: Array, hidden: Array}}\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_getFilteredSets',\n\t    value: function _getFilteredSets(category, items) {\n\t      var _this = this;\n\t\n\t      var visible = [];\n\t      var hidden = [];\n\t\n\t      // category === 'all', add visible class to everything\n\t      if (category === Shuffle.ALL_ITEMS) {\n\t        visible = items;\n\t\n\t        // Loop through each item and use provided function to determine\n\t        // whether to hide it or not.\n\t      } else {\n\t        items.forEach(function (item) {\n\t          if (_this._doesPassFilter(category, item.element)) {\n\t            visible.push(item);\n\t          } else {\n\t            hidden.push(item);\n\t          }\n\t        });\n\t      }\n\t\n\t      return {\n\t        visible: visible,\n\t        hidden: hidden\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Test an item to see if it passes a category.\n\t     * @param {string|Function} category Category or function to filter by.\n\t     * @param {Element} element An element to test.\n\t     * @return {boolean} Whether it passes the category/filter.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_doesPassFilter',\n\t    value: function _doesPassFilter(category, element) {\n\t\n\t      if (typeof category === 'function') {\n\t        return category.call(element, element, this);\n\t\n\t        // Check each element's data-groups attribute against the given category.\n\t      } else {\n\t        var attr = element.getAttribute('data-' + Shuffle.FILTER_ATTRIBUTE_KEY);\n\t        var keys = this.options.delimeter ? attr.split(this.options.delimeter) : JSON.parse(attr);\n\t\n\t        if (Array.isArray(category)) {\n\t          return category.some(arrayIncludes(keys));\n\t        }\n\t\n\t        return arrayIncludes(keys, category);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Toggles the visible and hidden class names.\n\t     * @param {{visible, hidden}} Object with visible and hidden arrays.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_toggleFilterClasses',\n\t    value: function _toggleFilterClasses(_ref) {\n\t      var visible = _ref.visible;\n\t      var hidden = _ref.hidden;\n\t\n\t      visible.forEach(function (item) {\n\t        item.show();\n\t      });\n\t\n\t      hidden.forEach(function (item) {\n\t        item.hide();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Set the initial css for each item\n\t     * @param {Array.<ShuffleItem>} [items] Optionally specifiy at set to initialize.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_initItems',\n\t    value: function _initItems() {\n\t      var items = arguments.length <= 0 || arguments[0] === undefined ? this.items : arguments[0];\n\t\n\t      items.forEach(function (item) {\n\t        item.init();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Remove element reference and styles.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_disposeItems',\n\t    value: function _disposeItems() {\n\t      var items = arguments.length <= 0 || arguments[0] === undefined ? this.items : arguments[0];\n\t\n\t      items.forEach(function (item) {\n\t        item.dispose();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Updates the visible item count.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_updateItemCount',\n\t    value: function _updateItemCount() {\n\t      this.visibleItems = this._getFilteredItems().length;\n\t    }\n\t\n\t    /**\n\t     * Sets css transform transition on a group of elements. This is not executed\n\t     * at the same time as `item.init` so that transitions don't occur upon\n\t     * initialization of Shuffle.\n\t     * @param {Array.<ShuffleItem>} items Shuffle items to set transitions on.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_setTransitions',\n\t    value: function _setTransitions() {\n\t      var items = arguments.length <= 0 || arguments[0] === undefined ? this.items : arguments[0];\n\t\n\t      var speed = this.options.speed;\n\t      var easing = this.options.easing;\n\t\n\t      var str;\n\t      if (this.options.useTransforms) {\n\t        str = 'transform ' + speed + 'ms ' + easing + ', opacity ' + speed + 'ms ' + easing;\n\t      } else {\n\t        str = 'top ' + speed + 'ms ' + easing + ', left ' + speed + 'ms ' + easing + ', opacity ' + speed + 'ms ' + easing;\n\t      }\n\t\n\t      items.forEach(function (item) {\n\t        item.element.style.transition = str;\n\t      });\n\t    }\n\t  }, {\n\t    key: '_getItems',\n\t    value: function _getItems() {\n\t      var _this2 = this;\n\t\n\t      return toArray(this.element.children).filter(function (el) {\n\t        return (0, _matchesSelector2.default)(el, _this2.options.itemSelector);\n\t      }).map(function (el) {\n\t        return new _shuffleItem2.default(el);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * When new elements are added to the shuffle container, update the array of\n\t     * items because that is the order `_layout` calls them.\n\t     */\n\t\n\t  }, {\n\t    key: '_updateItemsOrder',\n\t    value: function _updateItemsOrder() {\n\t      var children = this.element.children;\n\t      this.items = (0, _sorter2.default)(this.items, {\n\t        by: function by(element) {\n\t          return Array.prototype.indexOf.call(children, element);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: '_getFilteredItems',\n\t    value: function _getFilteredItems() {\n\t      return this.items.filter(function (item) {\n\t        return item.isVisible;\n\t      });\n\t    }\n\t  }, {\n\t    key: '_getConcealedItems',\n\t    value: function _getConcealedItems() {\n\t      return this.items.filter(function (item) {\n\t        return !item.isVisible;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Returns the column size, based on column width and sizer options.\n\t     * @param {number} containerWidth Size of the parent container.\n\t     * @param {number} gutterSize Size of the gutters.\n\t     * @return {number}\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_getColumnSize',\n\t    value: function _getColumnSize(containerWidth, gutterSize) {\n\t      var size;\n\t\n\t      // If the columnWidth property is a function, then the grid is fluid\n\t      if (typeof this.options.columnWidth === 'function') {\n\t        size = this.options.columnWidth(containerWidth);\n\t\n\t        // columnWidth option isn't a function, are they using a sizing element?\n\t      } else if (this.useSizer) {\n\t        size = Shuffle.getSize(this.options.sizer).width;\n\t\n\t        // if not, how about the explicitly set option?\n\t      } else if (this.options.columnWidth) {\n\t        size = this.options.columnWidth;\n\t\n\t        // or use the size of the first item\n\t      } else if (this.items.length > 0) {\n\t        size = Shuffle.getSize(this.items[0].element, true).width;\n\t\n\t        // if there's no items, use size of container\n\t      } else {\n\t        size = containerWidth;\n\t      }\n\t\n\t      // Don't let them set a column width of zero.\n\t      if (size === 0) {\n\t        size = containerWidth;\n\t      }\n\t\n\t      return size + gutterSize;\n\t    }\n\t\n\t    /**\n\t     * Returns the gutter size, based on gutter width and sizer options.\n\t     * @param {number} containerWidth Size of the parent container.\n\t     * @return {number}\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_getGutterSize',\n\t    value: function _getGutterSize(containerWidth) {\n\t      var size;\n\t      if (typeof this.options.gutterWidth === 'function') {\n\t        size = this.options.gutterWidth(containerWidth);\n\t      } else if (this.useSizer) {\n\t        size = (0, _getNumberStyle2.default)(this.options.sizer, 'marginLeft');\n\t      } else {\n\t        size = this.options.gutterWidth;\n\t      }\n\t\n\t      return size;\n\t    }\n\t\n\t    /**\n\t     * Calculate the number of columns to be used. Gets css if using sizer element.\n\t     * @param {number} [containerWidth] Optionally specify a container width if\n\t     *    it's already available.\n\t     */\n\t\n\t  }, {\n\t    key: '_setColumns',\n\t    value: function _setColumns() {\n\t      var containerWidth = arguments.length <= 0 || arguments[0] === undefined ? Shuffle.getSize(this.element).width : arguments[0];\n\t\n\t      var gutter = this._getGutterSize(containerWidth);\n\t      var columnWidth = this._getColumnSize(containerWidth, gutter);\n\t      var calculatedColumns = (containerWidth + gutter) / columnWidth;\n\t\n\t      // Widths given from getStyles are not precise enough...\n\t      if (Math.abs(Math.round(calculatedColumns) - calculatedColumns) < this.options.columnThreshold) {\n\t        // e.g. calculatedColumns = 11.998876\n\t        calculatedColumns = Math.round(calculatedColumns);\n\t      }\n\t\n\t      this.cols = Math.max(Math.floor(calculatedColumns), 1);\n\t      this.containerWidth = containerWidth;\n\t      this.colWidth = columnWidth;\n\t    }\n\t\n\t    /**\n\t     * Adjust the height of the grid\n\t     */\n\t\n\t  }, {\n\t    key: '_setContainerSize',\n\t    value: function _setContainerSize() {\n\t      this.element.style.height = this._getContainerSize() + 'px';\n\t    }\n\t\n\t    /**\n\t     * Based on the column heights, it returns the biggest one.\n\t     * @return {number}\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_getContainerSize',\n\t    value: function _getContainerSize() {\n\t      return arrayMax(this.positions);\n\t    }\n\t\n\t    /**\n\t     * Get the clamped stagger amount.\n\t     * @param {number} index Index of the item to be staggered.\n\t     * @return {number}\n\t     */\n\t\n\t  }, {\n\t    key: '_getStaggerAmount',\n\t    value: function _getStaggerAmount(index) {\n\t      return Math.min(index * this.options.staggerAmount, this.options.staggerAmountMax);\n\t    }\n\t\n\t    /**\n\t     * @return {boolean} Whether the event was prevented or not.\n\t     */\n\t\n\t  }, {\n\t    key: '_dispatch',\n\t    value: function _dispatch(name) {\n\t      var details = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      if (this.isDestroyed) {\n\t        return;\n\t      }\n\t\n\t      details.shuffle = this;\n\t      return !this.element.dispatchEvent(new CustomEvent(name, {\n\t        bubbles: true,\n\t        cancelable: false,\n\t        detail: details\n\t      }));\n\t    }\n\t\n\t    /**\n\t     * Zeros out the y columns array, which is used to determine item placement.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_resetCols',\n\t    value: function _resetCols() {\n\t      var i = this.cols;\n\t      this.positions = [];\n\t      while (i--) {\n\t        this.positions.push(0);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Loops through each item that should be shown and calculates the x, y position.\n\t     * @param {Array.<ShuffleItem>} items Array of items that will be shown/layed\n\t     *     out in order in their array.\n\t     */\n\t\n\t  }, {\n\t    key: '_layout',\n\t    value: function _layout(items) {\n\t      var _this3 = this;\n\t\n\t      var count = 0;\n\t      items.forEach(function (item) {\n\t        var currPos = item.point;\n\t        var currScale = item.scale;\n\t        var itemSize = Shuffle.getSize(item.element, true);\n\t        var pos = _this3._getItemPosition(itemSize);\n\t\n\t        function callback() {\n\t          item.element.style.transitionDelay = '';\n\t          item.applyCss(_shuffleItem2.default.Css.VISIBLE.after);\n\t        }\n\t\n\t        // If the item will not change its position, do not add it to the render\n\t        // queue. Transitions don't fire when setting a property to the same value.\n\t        if (_point2.default.equals(currPos, pos) && currScale === _shuffleItem2.default.Scale.VISIBLE) {\n\t          callback();\n\t          return;\n\t        }\n\t\n\t        item.point = pos;\n\t        item.scale = _shuffleItem2.default.Scale.VISIBLE;\n\t\n\t        // Use xtend here to clone the object so that the `before` object isn't\n\t        // modified when the transition delay is added.\n\t        var styles = (0, _xtend2.default)(_shuffleItem2.default.Css.VISIBLE.before);\n\t        styles.transitionDelay = _this3._getStaggerAmount(count) + 'ms';\n\t\n\t        _this3._queue.push({\n\t          item: item,\n\t          styles: styles,\n\t          callback: callback\n\t        });\n\t\n\t        count++;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Determine the location of the next item, based on its size.\n\t     * @param {{width: number, height: number}} itemSize Object with width and height.\n\t     * @return {Point}\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_getItemPosition',\n\t    value: function _getItemPosition(itemSize) {\n\t      return (0, _layout2.getItemPosition)({\n\t        itemSize: itemSize,\n\t        positions: this.positions,\n\t        gridSize: this.colWidth,\n\t        total: this.cols,\n\t        threshold: this.options.columnThreshold,\n\t        buffer: this.options.buffer\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Hides the elements that don't match our filter.\n\t     * @param {Array.<ShuffleItem>} collection Collection to shrink.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_shrink',\n\t    value: function _shrink() {\n\t      var _this4 = this;\n\t\n\t      var collection = arguments.length <= 0 || arguments[0] === undefined ? this._getConcealedItems() : arguments[0];\n\t\n\t      var count = 0;\n\t      collection.forEach(function (item) {\n\t        function callback() {\n\t          item.applyCss(_shuffleItem2.default.Css.HIDDEN.after);\n\t        }\n\t\n\t        // Continuing would add a transitionend event listener to the element, but\n\t        // that listener would not execute because the transform and opacity would\n\t        // stay the same.\n\t        // The callback is executed here because it is not guaranteed to be called\n\t        // after the transitionend event because the transitionend could be\n\t        // canceled if another animation starts.\n\t        if (item.scale === _shuffleItem2.default.Scale.HIDDEN) {\n\t          callback();\n\t          return;\n\t        }\n\t\n\t        item.scale = _shuffleItem2.default.Scale.HIDDEN;\n\t\n\t        var styles = (0, _xtend2.default)(_shuffleItem2.default.Css.HIDDEN.before);\n\t        styles.transitionDelay = _this4._getStaggerAmount(count) + 'ms';\n\t\n\t        _this4._queue.push({\n\t          item: item,\n\t          styles: styles,\n\t          callback: callback\n\t        });\n\t\n\t        count++;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Resize handler.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_handleResize',\n\t    value: function _handleResize() {\n\t      // If shuffle is disabled, destroyed, don't do anything\n\t      if (!this.isEnabled || this.isDestroyed) {\n\t        return;\n\t      }\n\t\n\t      // Will need to check height in the future if it's layed out horizontaly\n\t      var containerWidth = Shuffle.getSize(this.element).width;\n\t\n\t      // containerWidth hasn't changed, don't do anything\n\t      if (containerWidth === this.containerWidth) {\n\t        return;\n\t      }\n\t\n\t      this.update();\n\t    }\n\t\n\t    /**\n\t     * Returns styles which will be applied to the an item for a transition.\n\t     * @param {Object} obj Transition options.\n\t     * @return {!Object} Transforms for transitions, left/top for animate.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_getStylesForTransition',\n\t    value: function _getStylesForTransition(_ref2) {\n\t      var item = _ref2.item;\n\t      var styles = _ref2.styles;\n\t\n\t      if (!styles.transitionDelay) {\n\t        styles.transitionDelay = '0ms';\n\t      }\n\t\n\t      var x = item.point.x;\n\t      var y = item.point.y;\n\t\n\t      if (this.options.useTransforms) {\n\t        styles.transform = 'translate(' + x + 'px, ' + y + 'px) scale(' + item.scale + ')';\n\t      } else {\n\t        styles.left = x + 'px';\n\t        styles.top = y + 'px';\n\t      }\n\t\n\t      return styles;\n\t    }\n\t\n\t    /**\n\t     * Listen for the transition end on an element and execute the itemCallback\n\t     * when it finishes.\n\t     * @param {Element} element Element to listen on.\n\t     * @param {Function} itemCallback Callback for the item.\n\t     * @param {Function} done Callback to notify `parallel` that this one is done.\n\t     */\n\t\n\t  }, {\n\t    key: '_whenTransitionDone',\n\t    value: function _whenTransitionDone(element, itemCallback, done) {\n\t      var id = (0, _onTransitionEnd.onTransitionEnd)(element, function (evt) {\n\t        itemCallback();\n\t        done(null, evt);\n\t      });\n\t\n\t      this._transitions.push(id);\n\t    }\n\t\n\t    /**\n\t     * Return a function which will set CSS styles and call the `done` function\n\t     * when (if) the transition finishes.\n\t     * @param {Object} opts Transition object.\n\t     * @return {Function} A function to be called with a `done` function.\n\t     */\n\t\n\t  }, {\n\t    key: '_getTransitionFunction',\n\t    value: function _getTransitionFunction(opts) {\n\t      var _this5 = this;\n\t\n\t      return function (done) {\n\t        opts.item.applyCss(_this5._getStylesForTransition(opts));\n\t        _this5._whenTransitionDone(opts.item.element, opts.callback, done);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Execute the styles gathered in the style queue. This applies styles to elements,\n\t     * triggering transitions.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_processQueue',\n\t    value: function _processQueue() {\n\t      if (this.isTransitioning) {\n\t        this._cancelMovement();\n\t      }\n\t\n\t      var hasSpeed = this.options.speed > 0;\n\t      var hasQueue = this._queue.length > 0;\n\t\n\t      if (hasQueue && hasSpeed && this.isInitialized) {\n\t        this._startTransitions(this._queue);\n\t      } else if (hasQueue) {\n\t        this._styleImmediately(this._queue);\n\t        this._dispatchLayout();\n\t\n\t        // A call to layout happened, but none of the newly visible items will\n\t        // change position or the transition duration is zero, which will not trigger\n\t        // the transitionend event.\n\t      } else {\n\t        this._dispatchLayout();\n\t      }\n\t\n\t      // Remove everything in the style queue\n\t      this._queue.length = 0;\n\t    }\n\t\n\t    /**\n\t     * Wait for each transition to finish, the emit the layout event.\n\t     * @param {Array.<Object>} transitions Array of transition objects.\n\t     */\n\t\n\t  }, {\n\t    key: '_startTransitions',\n\t    value: function _startTransitions(transitions) {\n\t      var _this6 = this;\n\t\n\t      // Set flag that shuffle is currently in motion.\n\t      this.isTransitioning = true;\n\t\n\t      // Create an array of functions to be called.\n\t      var callbacks = transitions.map(function (obj) {\n\t        return _this6._getTransitionFunction(obj);\n\t      });\n\t\n\t      (0, _arrayParallel2.default)(callbacks, this._movementFinished.bind(this));\n\t    }\n\t  }, {\n\t    key: '_cancelMovement',\n\t    value: function _cancelMovement() {\n\t      // Remove the transition end event for each listener.\n\t      this._transitions.forEach(_onTransitionEnd.cancelTransitionEnd);\n\t\n\t      // Reset the array.\n\t      this._transitions.length = 0;\n\t\n\t      // Show it's no longer active.\n\t      this.isTransitioning = false;\n\t    }\n\t\n\t    /**\n\t     * Apply styles without a transition.\n\t     * @param {Array.<Object>} objects Array of transition objects.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_styleImmediately',\n\t    value: function _styleImmediately(objects) {\n\t      var _this7 = this;\n\t\n\t      if (objects.length) {\n\t        var elements = objects.map(function (obj) {\n\t          return obj.item.element;\n\t        });\n\t\n\t        Shuffle._skipTransitions(elements, function () {\n\t          objects.forEach(function (obj) {\n\t            obj.item.applyCss(_this7._getStylesForTransition(obj));\n\t            obj.callback();\n\t          });\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: '_movementFinished',\n\t    value: function _movementFinished() {\n\t      this._transitions.length = 0;\n\t      this.isTransitioning = false;\n\t      this._dispatchLayout();\n\t    }\n\t  }, {\n\t    key: '_dispatchLayout',\n\t    value: function _dispatchLayout() {\n\t      this._dispatch(Shuffle.EventType.LAYOUT);\n\t    }\n\t\n\t    /**\n\t     * The magic. This is what makes the plugin 'shuffle'\n\t     * @param {string|Function|Array.<string>} [category] Category to filter by.\n\t     *     Can be a function, string, or array of strings.\n\t     * @param {Object} [sortObj] A sort object which can sort the visible set\n\t     */\n\t\n\t  }, {\n\t    key: 'filter',\n\t    value: function filter(category, sortObj) {\n\t      if (!this.isEnabled) {\n\t        return;\n\t      }\n\t\n\t      if (!category || category && category.length === 0) {\n\t        category = Shuffle.ALL_ITEMS;\n\t      }\n\t\n\t      this._filter(category);\n\t\n\t      // Shrink each hidden item\n\t      this._shrink();\n\t\n\t      // How many visible elements?\n\t      this._updateItemCount();\n\t\n\t      // Update transforms on visible elements so they will animate to their new positions.\n\t      this.sort(sortObj);\n\t    }\n\t\n\t    /**\n\t     * Gets the visible elements, sorts them, and passes them to layout.\n\t     * @param {Object} opts the options object for the sorted plugin\n\t     */\n\t\n\t  }, {\n\t    key: 'sort',\n\t    value: function sort() {\n\t      var opts = arguments.length <= 0 || arguments[0] === undefined ? this.lastSort : arguments[0];\n\t\n\t      if (!this.isEnabled) {\n\t        return;\n\t      }\n\t\n\t      this._resetCols();\n\t\n\t      var items = this._getFilteredItems();\n\t      items = (0, _sorter2.default)(items, opts);\n\t\n\t      this._layout(items);\n\t\n\t      // `_layout` always happens after `_shrink`, so it's safe to process the style\n\t      // queue here with styles from the shrink method.\n\t      this._processQueue();\n\t\n\t      // Adjust the height of the container.\n\t      this._setContainerSize();\n\t\n\t      this.lastSort = opts;\n\t    }\n\t\n\t    /**\n\t     * Reposition everything.\n\t     * @param {boolean} isOnlyLayout If true, column and gutter widths won't be\n\t     *     recalculated.\n\t     */\n\t\n\t  }, {\n\t    key: 'update',\n\t    value: function update(isOnlyLayout) {\n\t      if (this.isEnabled) {\n\t\n\t        if (!isOnlyLayout) {\n\t          // Get updated colCount\n\t          this._setColumns();\n\t        }\n\t\n\t        // Layout items\n\t        this.sort();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Use this instead of `update()` if you don't need the columns and gutters updated\n\t     * Maybe an image inside `shuffle` loaded (and now has a height), which means calculations\n\t     * could be off.\n\t     */\n\t\n\t  }, {\n\t    key: 'layout',\n\t    value: function layout() {\n\t      this.update(true);\n\t    }\n\t\n\t    /**\n\t     * New items have been appended to shuffle. Mix them in with the current\n\t     * filter or sort status.\n\t     * @param {Array.<Element>} newItems Collection of new items.\n\t     */\n\t\n\t  }, {\n\t    key: 'add',\n\t    value: function add(newItems) {\n\t      newItems = (0, _arrayUniq2.default)(newItems).map(function (el) {\n\t        return new _shuffleItem2.default(el);\n\t      });\n\t\n\t      // Add classes and set initial positions.\n\t      this._initItems(newItems);\n\t\n\t      // Add transition to each item.\n\t      this._setTransitions(newItems);\n\t\n\t      // Update the list of items.\n\t      this.items = this.items.concat(newItems);\n\t      this._updateItemsOrder();\n\t      this.filter(this.lastFilter);\n\t    }\n\t\n\t    /**\n\t     * Disables shuffle from updating dimensions and layout on resize\n\t     */\n\t\n\t  }, {\n\t    key: 'disable',\n\t    value: function disable() {\n\t      this.isEnabled = false;\n\t    }\n\t\n\t    /**\n\t     * Enables shuffle again\n\t     * @param {boolean} [isUpdateLayout=true] if undefined, shuffle will update columns and gutters\n\t     */\n\t\n\t  }, {\n\t    key: 'enable',\n\t    value: function enable(isUpdateLayout) {\n\t      this.isEnabled = true;\n\t      if (isUpdateLayout !== false) {\n\t        this.update();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Remove 1 or more shuffle items\n\t     * @param {Array.<Element>} collection An array containing one or more\n\t     *     elements in shuffle\n\t     * @return {Shuffle} The shuffle object\n\t     */\n\t\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(collection) {\n\t      var _this8 = this;\n\t\n\t      if (!collection.length) {\n\t        return;\n\t      }\n\t\n\t      collection = (0, _arrayUniq2.default)(collection);\n\t\n\t      var oldItems = collection.map(function (element) {\n\t        return _this8.getItemByElement(element);\n\t      }).filter(function (item) {\n\t        return !!item;\n\t      });\n\t\n\t      var handleLayout = function handleLayout() {\n\t        _this8.element.removeEventListener(Shuffle.EventType.LAYOUT, handleLayout);\n\t        _this8._disposeItems(oldItems);\n\t\n\t        // Remove the collection in the callback\n\t        collection.forEach(function (element) {\n\t          element.parentNode.removeChild(element);\n\t        });\n\t\n\t        _this8._dispatch(Shuffle.EventType.REMOVED, { collection: collection });\n\t\n\t        // Let it get garbage collected\n\t        collection = null;\n\t        oldItems = null;\n\t      };\n\t\n\t      // Hide collection first.\n\t      this._toggleFilterClasses({\n\t        visible: [],\n\t        hidden: oldItems\n\t      });\n\t\n\t      this._shrink(oldItems);\n\t\n\t      this.sort();\n\t\n\t      // Update the list of items here because `remove` could be called again\n\t      // with an item that is in the process of being removed.\n\t      this.items = this.items.filter(function (item) {\n\t        return !arrayIncludes(oldItems, item);\n\t      });\n\t      this._updateItemCount();\n\t\n\t      this.element.addEventListener(Shuffle.EventType.LAYOUT, handleLayout);\n\t    }\n\t\n\t    /**\n\t     * Retrieve a shuffle item by its element.\n\t     * @param {Element} element Element to look for.\n\t     * @return {?ShuffleItem} A shuffle item or null if it's not found.\n\t     */\n\t\n\t  }, {\n\t    key: 'getItemByElement',\n\t    value: function getItemByElement(element) {\n\t      for (var i = this.items.length - 1; i >= 0; i--) {\n\t        if (this.items[i].element === element) {\n\t          return this.items[i];\n\t        }\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Destroys shuffle, removes events, styles, and classes\n\t     */\n\t\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this._cancelMovement();\n\t      window.removeEventListener('resize', this._onResize);\n\t\n\t      // Reset container styles\n\t      this.element.classList.remove('shuffle');\n\t      this.element.removeAttribute('style');\n\t\n\t      // Reset individual item styles\n\t      this._disposeItems();\n\t\n\t      // Null DOM references\n\t      this.items = null;\n\t      this.options.sizer = null;\n\t      this.element = null;\n\t      this._transitions = null;\n\t\n\t      // Set a flag so if a debounced resize has been triggered,\n\t      // it can first check if it is actually isDestroyed and not doing anything\n\t      this.isDestroyed = true;\n\t    }\n\t\n\t    /**\n\t     * Returns the outer width of an element, optionally including its margins.\n\t     *\n\t     * There are a few different methods for getting the width of an element, none of\n\t     * which work perfectly for all Shuffle's use cases.\n\t     *\n\t     * 1. getBoundingClientRect() `left` and `right` properties.\n\t     *   - Accounts for transform scaled elements, making it useless for Shuffle\n\t     *   elements which have shrunk.\n\t     * 2. The `offsetWidth` property.\n\t     *   - This value stays the same regardless of the elements transform property,\n\t     *   however, it does not return subpixel values.\n\t     * 3. getComputedStyle()\n\t     *   - This works great Chrome, Firefox, Safari, but IE<=11 does not include\n\t     *   padding and border when box-sizing: border-box is set, requiring a feature\n\t     *   test and extra work to add the padding back for IE and other browsers which\n\t     *   follow the W3C spec here.\n\t     *\n\t     * @param {Element} element The element.\n\t     * @param {boolean} [includeMargins] Whether to include margins. Default is false.\n\t     * @return {{width: number, height: number}} The width and height.\n\t     */\n\t\n\t  }], [{\n\t    key: 'getSize',\n\t    value: function getSize(element, includeMargins) {\n\t      // Store the styles so that they can be used by others without asking for it again.\n\t      var styles = window.getComputedStyle(element, null);\n\t      var width = (0, _getNumberStyle2.default)(element, 'width', styles);\n\t      var height = (0, _getNumberStyle2.default)(element, 'height', styles);\n\t\n\t      if (includeMargins) {\n\t        var marginLeft = (0, _getNumberStyle2.default)(element, 'marginLeft', styles);\n\t        var marginRight = (0, _getNumberStyle2.default)(element, 'marginRight', styles);\n\t        var marginTop = (0, _getNumberStyle2.default)(element, 'marginTop', styles);\n\t        var marginBottom = (0, _getNumberStyle2.default)(element, 'marginBottom', styles);\n\t        width += marginLeft + marginRight;\n\t        height += marginTop + marginBottom;\n\t      }\n\t\n\t      return {\n\t        width: width,\n\t        height: height\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Change a property or execute a function which will not have a transition\n\t     * @param {Array.<Element>} elements DOM elements that won't be transitioned.\n\t     * @param {Function} callback A function which will be called while transition\n\t     *     is set to 0ms.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_skipTransitions',\n\t    value: function _skipTransitions(elements, callback) {\n\t      var zero = '0ms';\n\t\n\t      // Save current duration and delay.\n\t      var data = elements.map(function (element) {\n\t        var style = element.style;\n\t        var duration = style.transitionDuration;\n\t        var delay = style.transitionDelay;\n\t\n\t        // Set the duration to zero so it happens immediately\n\t        style.transitionDuration = zero;\n\t        style.transitionDelay = zero;\n\t\n\t        return {\n\t          duration: duration,\n\t          delay: delay\n\t        };\n\t      });\n\t\n\t      callback();\n\t\n\t      // Cause reflow.\n\t      elements[0].offsetWidth; // jshint ignore:line\n\t\n\t      // Put the duration back\n\t      elements.forEach(function (element, i) {\n\t        element.style.transitionDuration = data[i].duration;\n\t        element.style.transitionDelay = data[i].delay;\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Shuffle;\n\t}();\n\t\n\tShuffle.ShuffleItem = _shuffleItem2.default;\n\t\n\tShuffle.ALL_ITEMS = 'all';\n\tShuffle.FILTER_ATTRIBUTE_KEY = 'groups';\n\t\n\t/**\n\t * @enum {string}\n\t */\n\tShuffle.EventType = {\n\t  LAYOUT: 'shuffle:layout',\n\t  REMOVED: 'shuffle:removed'\n\t};\n\t\n\t/** @enum {string} */\n\tShuffle.Classes = _classes2.default;\n\t\n\t// Overrideable options\n\tShuffle.options = {\n\t  // Initial filter group.\n\t  group: Shuffle.ALL_ITEMS,\n\t\n\t  // Transition/animation speed (milliseconds).\n\t  speed: 250,\n\t\n\t  // CSS easing function to use.\n\t  easing: 'ease',\n\t\n\t  // e.g. '.picture-item'.\n\t  itemSelector: '*',\n\t\n\t  // Element or selector string. Use an element to determine the size of columns\n\t  // and gutters.\n\t  sizer: null,\n\t\n\t  // A static number or function that tells the plugin how wide the gutters\n\t  // between columns are (in pixels).\n\t  gutterWidth: 0,\n\t\n\t  // A static number or function that returns a number which tells the plugin\n\t  // how wide the columns are (in pixels).\n\t  columnWidth: 0,\n\t\n\t  // If your group is not json, and is comma delimeted, you could set delimeter\n\t  // to ','.\n\t  delimeter: null,\n\t\n\t  // Useful for percentage based heights when they might not always be exactly\n\t  // the same (in pixels).\n\t  buffer: 0,\n\t\n\t  // Reading the width of elements isn't precise enough and can cause columns to\n\t  // jump between values.\n\t  columnThreshold: 0.01,\n\t\n\t  // Shuffle can be isInitialized with a sort object. It is the same object\n\t  // given to the sort method.\n\t  initialSort: null,\n\t\n\t  // By default, shuffle will throttle resize events. This can be changed or\n\t  // removed.\n\t  throttle: _throttleit2.default,\n\t\n\t  // How often shuffle can be called on resize (in milliseconds).\n\t  throttleTime: 300,\n\t\n\t  // Transition delay offset for each item in milliseconds.\n\t  staggerAmount: 15,\n\t\n\t  // Maximum stagger delay in milliseconds.\n\t  staggerAmountMax: 250,\n\t\n\t  // Whether to use transforms or absolute positioning.\n\t  useTransforms: true\n\t};\n\t\n\t// Expose for testing. Hack at your own risk.\n\tShuffle.__Point = _point2.default;\n\tShuffle.__sorter = _sorter2.default;\n\tShuffle.__getColumnSpan = _layout2.getColumnSpan;\n\tShuffle.__getAvailablePositions = _layout2.getAvailablePositions;\n\tShuffle.__getShortColumn = _layout2.getShortColumn;\n\t\n\texports.default = Shuffle;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// Polyfill for creating CustomEvents on IE9/10/11\n\t\n\t// code pulled from:\n\t// https://github.com/d4tocchini/customevent-polyfill\n\t// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\t\n\ttry {\n\t  new window.CustomEvent(\"test\");\n\t} catch(e) {\n\t var CustomEvent = function(event, params) {\n\t      var evt;\n\t      params = params || {\n\t          bubbles: false,\n\t          cancelable: false,\n\t          detail: undefined\n\t      };\n\t\n\t      evt = document.createEvent(\"CustomEvent\");\n\t      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t      return evt;\n\t  };\n\t\n\t  CustomEvent.prototype = window.Event.prototype;\n\t  window.CustomEvent = CustomEvent; // expose definition to window\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar proto = Element.prototype;\n\tvar vendor = proto.matches\n\t  || proto.matchesSelector\n\t  || proto.webkitMatchesSelector\n\t  || proto.mozMatchesSelector\n\t  || proto.msMatchesSelector\n\t  || proto.oMatchesSelector;\n\t\n\tmodule.exports = match;\n\t\n\t/**\n\t * Match `el` to `selector`.\n\t *\n\t * @param {Element} el\n\t * @param {String} selector\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction match(el, selector) {\n\t  if (vendor) return vendor.call(el, selector);\n\t  var nodes = el.parentNode.querySelectorAll(selector);\n\t  for (var i = 0; i < nodes.length; i++) {\n\t    if (nodes[i] == el) return true;\n\t  }\n\t  return false;\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t// there's 3 implementations written in increasing order of efficiency\n\t\n\t// 1 - no Set type is defined\n\tfunction uniqNoSet(arr) {\n\t\tvar ret = [];\n\t\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (ret.indexOf(arr[i]) === -1) {\n\t\t\t\tret.push(arr[i]);\n\t\t\t}\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t// 2 - a simple Set type is defined\n\tfunction uniqSet(arr) {\n\t\tvar seen = new Set();\n\t\treturn arr.filter(function (el) {\n\t\t\tif (!seen.has(el)) {\n\t\t\t\tseen.add(el);\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t});\n\t}\n\t\n\t// 3 - a standard Set type is defined and it has a forEach method\n\tfunction uniqSetWithForEach(arr) {\n\t\tvar ret = [];\n\t\n\t\t(new Set(arr)).forEach(function (el) {\n\t\t\tret.push(el);\n\t\t});\n\t\n\t\treturn ret;\n\t}\n\t\n\t// V8 currently has a broken implementation\n\t// https://github.com/joyent/node/issues/8449\n\tfunction doesForEachActuallyWork() {\n\t\tvar ret = false;\n\t\n\t\t(new Set([true])).forEach(function (el) {\n\t\t\tret = el;\n\t\t});\n\t\n\t\treturn ret === true;\n\t}\n\t\n\tif ('Set' in global) {\n\t\tif (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {\n\t\t\tmodule.exports = uniqSetWithForEach;\n\t\t} else {\n\t\t\tmodule.exports = uniqSet;\n\t\t}\n\t} else {\n\t\tmodule.exports = uniqNoSet;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = extend\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tfunction extend() {\n\t    var target = {}\n\t\n\t    for (var i = 0; i < arguments.length; i++) {\n\t        var source = arguments[i]\n\t\n\t        for (var key in source) {\n\t            if (hasOwnProperty.call(source, key)) {\n\t                target[key] = source[key]\n\t            }\n\t        }\n\t    }\n\t\n\t    return target\n\t}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = throttle;\n\t\n\t/**\n\t * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n\t *\n\t * @param {Function} func Function to wrap.\n\t * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n\t * @return {Function} A new function that wraps the `func` function passed in.\n\t */\n\t\n\tfunction throttle (func, wait) {\n\t  var ctx, args, rtn, timeoutID; // caching\n\t  var last = 0;\n\t\n\t  return function throttled () {\n\t    ctx = this;\n\t    args = arguments;\n\t    var delta = new Date() - last;\n\t    if (!timeoutID)\n\t      if (delta >= wait) call();\n\t      else timeoutID = setTimeout(call, wait - delta);\n\t    return rtn;\n\t  };\n\t\n\t  function call () {\n\t    timeoutID = 0;\n\t    last = +new Date();\n\t    rtn = func.apply(ctx, args);\n\t    ctx = null;\n\t    args = null;\n\t  }\n\t}\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function parallel(fns, context, callback) {\n\t  if (!callback) {\n\t    if (typeof context === 'function') {\n\t      callback = context\n\t      context = null\n\t    } else {\n\t      callback = noop\n\t    }\n\t  }\n\t\n\t  var pending = fns && fns.length\n\t  if (!pending) return callback(null, []);\n\t\n\t  var finished = false\n\t  var results = new Array(pending)\n\t\n\t  fns.forEach(context ? function (fn, i) {\n\t    fn.call(context, maybeDone(i))\n\t  } : function (fn, i) {\n\t    fn(maybeDone(i))\n\t  })\n\t\n\t  function maybeDone(i) {\n\t    return function (err, result) {\n\t      if (finished) return;\n\t\n\t      if (err) {\n\t        callback(err, results)\n\t        finished = true\n\t        return\n\t      }\n\t\n\t      results[i] = result\n\t\n\t      if (!--pending) callback(null, results);\n\t    }\n\t  }\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _getNumber = __webpack_require__(9);\n\t\n\tvar _getNumber2 = _interopRequireDefault(_getNumber);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Represents a coordinate pair.\n\t * @param {number} [x=0] X.\n\t * @param {number} [y=0] Y.\n\t */\n\tvar Point = function Point(x, y) {\n\t  this.x = (0, _getNumber2.default)(x);\n\t  this.y = (0, _getNumber2.default)(y);\n\t};\n\t\n\t/**\n\t * Whether two points are equal.\n\t * @param {Point} a Point A.\n\t * @param {Point} b Point B.\n\t * @return {boolean}\n\t */\n\tPoint.equals = function (a, b) {\n\t  return a.x === b.x && a.y === b.y;\n\t};\n\t\n\texports.default = Point;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Always returns a numeric value, given a value. Logic from jQuery's `isNumeric`.\n\t * @param {*} value Possibly numeric value.\n\t * @return {number} `value` or zero if `value` isn't numeric.\n\t */\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getNumber;\n\tfunction getNumber(value) {\n\t  return parseFloat(value) || 0;\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _point = __webpack_require__(8);\n\t\n\tvar _point2 = _interopRequireDefault(_point);\n\t\n\tvar _classes = __webpack_require__(11);\n\t\n\tvar _classes2 = _interopRequireDefault(_classes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar id = 0;\n\t\n\tvar ShuffleItem = function () {\n\t  function ShuffleItem(element) {\n\t    _classCallCheck(this, ShuffleItem);\n\t\n\t    this.id = id++;\n\t    this.element = element;\n\t    this.isVisible = true;\n\t  }\n\t\n\t  _createClass(ShuffleItem, [{\n\t    key: 'show',\n\t    value: function show() {\n\t      this.isVisible = true;\n\t      this.element.classList.remove(_classes2.default.HIDDEN);\n\t      this.element.classList.add(_classes2.default.VISIBLE);\n\t    }\n\t  }, {\n\t    key: 'hide',\n\t    value: function hide() {\n\t      this.isVisible = false;\n\t      this.element.classList.remove(_classes2.default.VISIBLE);\n\t      this.element.classList.add(_classes2.default.HIDDEN);\n\t    }\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      this.addClasses([_classes2.default.SHUFFLE_ITEM, _classes2.default.VISIBLE]);\n\t      this.applyCss(ShuffleItem.Css.INITIAL);\n\t      this.scale = ShuffleItem.Scale.VISIBLE;\n\t      this.point = new _point2.default();\n\t    }\n\t  }, {\n\t    key: 'addClasses',\n\t    value: function addClasses(classes) {\n\t      var _this = this;\n\t\n\t      classes.forEach(function (className) {\n\t        _this.element.classList.add(className);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeClasses',\n\t    value: function removeClasses(classes) {\n\t      var _this2 = this;\n\t\n\t      classes.forEach(function (className) {\n\t        _this2.element.classList.remove(className);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'applyCss',\n\t    value: function applyCss(obj) {\n\t      for (var key in obj) {\n\t        this.element.style[key] = obj[key];\n\t      }\n\t    }\n\t  }, {\n\t    key: 'dispose',\n\t    value: function dispose() {\n\t      this.removeClasses([_classes2.default.HIDDEN, _classes2.default.VISIBLE, _classes2.default.SHUFFLE_ITEM]);\n\t\n\t      this.element.removeAttribute('style');\n\t      this.element = null;\n\t    }\n\t  }]);\n\t\n\t  return ShuffleItem;\n\t}();\n\t\n\tShuffleItem.Css = {\n\t  INITIAL: {\n\t    position: 'absolute',\n\t    top: 0,\n\t    left: 0,\n\t    visibility: 'visible',\n\t    'will-change': 'transform'\n\t  },\n\t  VISIBLE: {\n\t    before: {\n\t      opacity: 1,\n\t      visibility: 'visible'\n\t    },\n\t    after: {}\n\t  },\n\t  HIDDEN: {\n\t    before: {\n\t      opacity: 0\n\t    },\n\t    after: {\n\t      visibility: 'hidden'\n\t    }\n\t  }\n\t};\n\t\n\tShuffleItem.Scale = {\n\t  VISIBLE: 1,\n\t  HIDDEN: 0.001\n\t};\n\t\n\texports.default = ShuffleItem;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  BASE: 'shuffle',\n\t  SHUFFLE_ITEM: 'shuffle-item',\n\t  VISIBLE: 'shuffle-item--visible',\n\t  HIDDEN: 'shuffle-item--hidden'\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getNumberStyle;\n\t\n\tvar _getNumber = __webpack_require__(9);\n\t\n\tvar _getNumber2 = _interopRequireDefault(_getNumber);\n\t\n\tvar _computedSize = __webpack_require__(13);\n\t\n\tvar _computedSize2 = _interopRequireDefault(_computedSize);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Retrieve the computed style for an element, parsed as a float.\n\t * @param {Element} element Element to get style for.\n\t * @param {string} style Style property.\n\t * @param {CSSStyleDeclaration} [styles] Optionally include clean styles to\n\t *     use instead of asking for them again.\n\t * @return {number} The parsed computed value or zero if that fails because IE\n\t *     will return 'auto' when the element doesn't have margins instead of\n\t *     the computed style.\n\t */\n\tfunction getNumberStyle(element, style) {\n\t  var styles = arguments.length <= 2 || arguments[2] === undefined ? window.getComputedStyle(element, null) : arguments[2];\n\t\n\t  var value = (0, _getNumber2.default)(styles[style]);\n\t\n\t  // Support IE<=11 and W3C spec.\n\t  if (!_computedSize2.default && style === 'width') {\n\t    value += (0, _getNumber2.default)(styles.paddingLeft) + (0, _getNumber2.default)(styles.paddingRight) + (0, _getNumber2.default)(styles.borderLeftWidth) + (0, _getNumber2.default)(styles.borderRightWidth);\n\t  } else if (!_computedSize2.default && style === 'height') {\n\t    value += (0, _getNumber2.default)(styles.paddingTop) + (0, _getNumber2.default)(styles.paddingBottom) + (0, _getNumber2.default)(styles.borderTopWidth) + (0, _getNumber2.default)(styles.borderBottomWidth);\n\t  }\n\t\n\t  return value;\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar element = document.body || document.documentElement;\n\tvar e = document.createElement('div');\n\te.style.cssText = 'width:10px;padding:2px;box-sizing:border-box;';\n\telement.appendChild(e);\n\t\n\tvar width = window.getComputedStyle(e, null).width;\n\tvar ret = width === '10px';\n\t\n\telement.removeChild(e);\n\t\n\texports.default = ret;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = sorter;\n\t\n\tvar _xtend = __webpack_require__(5);\n\t\n\tvar _xtend2 = _interopRequireDefault(_xtend);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// http://stackoverflow.com/a/962890/373422\n\tfunction randomize(array) {\n\t  var tmp;\n\t  var current;\n\t  var top = array.length;\n\t\n\t  if (!top) {\n\t    return array;\n\t  }\n\t\n\t  while (--top) {\n\t    current = Math.floor(Math.random() * (top + 1));\n\t    tmp = array[current];\n\t    array[current] = array[top];\n\t    array[top] = tmp;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tvar defaults = {\n\t  // Use array.reverse() to reverse the results\n\t  reverse: false,\n\t\n\t  // Sorting function\n\t  by: null,\n\t\n\t  // If true, this will skip the sorting and return a randomized order in the array\n\t  randomize: false,\n\t\n\t  // Determines which property of each item in the array is passed to the\n\t  // sorting method.\n\t  key: 'element'\n\t};\n\t\n\t// You can return `undefined` from the `by` function to revert to DOM order.\n\tfunction sorter(arr, options) {\n\t  var opts = (0, _xtend2.default)(defaults, options);\n\t  var original = [].slice.call(arr);\n\t  var revert = false;\n\t\n\t  if (!arr.length) {\n\t    return [];\n\t  }\n\t\n\t  if (opts.randomize) {\n\t    return randomize(arr);\n\t  }\n\t\n\t  // Sort the elements by the opts.by function.\n\t  // If we don't have opts.by, default to DOM order\n\t  if (typeof opts.by === 'function') {\n\t    arr.sort(function (a, b) {\n\t\n\t      // Exit early if we already know we want to revert\n\t      if (revert) {\n\t        return 0;\n\t      }\n\t\n\t      var valA = opts.by(a[opts.key]);\n\t      var valB = opts.by(b[opts.key]);\n\t\n\t      // If both values are undefined, use the DOM order\n\t      if (valA === undefined && valB === undefined) {\n\t        revert = true;\n\t        return 0;\n\t      }\n\t\n\t      if (valA < valB || valA === 'sortFirst' || valB === 'sortLast') {\n\t        return -1;\n\t      }\n\t\n\t      if (valA > valB || valA === 'sortLast' || valB === 'sortFirst') {\n\t        return 1;\n\t      }\n\t\n\t      return 0;\n\t    });\n\t  }\n\t\n\t  // Revert to the original array if necessary\n\t  if (revert) {\n\t    return original;\n\t  }\n\t\n\t  if (opts.reverse) {\n\t    arr.reverse();\n\t  }\n\t\n\t  return arr;\n\t}\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.onTransitionEnd = onTransitionEnd;\n\texports.cancelTransitionEnd = cancelTransitionEnd;\n\tvar transitions = {};\n\tvar eventName = 'transitionend';\n\tvar count = 0;\n\t\n\tfunction uniqueId() {\n\t  return eventName + count++;\n\t}\n\t\n\tfunction onTransitionEnd(element, callback) {\n\t  var id = uniqueId();\n\t  var listener = function listener(evt) {\n\t    if (evt.currentTarget === evt.target) {\n\t      cancelTransitionEnd(id);\n\t      callback(evt);\n\t    }\n\t  };\n\t\n\t  element.addEventListener(eventName, listener);\n\t\n\t  transitions[id] = { element: element, listener: listener };\n\t\n\t  return id;\n\t}\n\t\n\tfunction cancelTransitionEnd(id) {\n\t  if (transitions[id]) {\n\t    transitions[id].element.removeEventListener(eventName, transitions[id].listener);\n\t    transitions[id] = null;\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t}\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getItemPosition = getItemPosition;\n\texports.getColumnSpan = getColumnSpan;\n\texports.getAvailablePositions = getAvailablePositions;\n\texports.getShortColumn = getShortColumn;\n\t\n\tvar _point = __webpack_require__(8);\n\t\n\tvar _point2 = _interopRequireDefault(_point);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction arrayMax(array) {\n\t  return Math.max.apply(Math, array);\n\t}\n\t\n\tfunction arrayMin(array) {\n\t  return Math.min.apply(Math, array);\n\t}\n\t\n\t/**\n\t * Determine the location of the next item, based on its size.\n\t * @param {Object} itemSize Object with width and height.\n\t * @param {Array.<number>} positions Positions of the other current items.\n\t * @param {number} gridSize The column width or row height.\n\t * @param {number} total The total number of columns or rows.\n\t * @param {number} threshold Buffer value for the column to fit.\n\t * @param {number} buffer Vertical buffer for the height of items.\n\t * @return {Point}\n\t */\n\tfunction getItemPosition(_ref) {\n\t  var itemSize = _ref.itemSize;\n\t  var positions = _ref.positions;\n\t  var gridSize = _ref.gridSize;\n\t  var total = _ref.total;\n\t  var threshold = _ref.threshold;\n\t  var buffer = _ref.buffer;\n\t\n\t  var span = getColumnSpan(itemSize.width, gridSize, total, threshold);\n\t  var setY = getAvailablePositions(positions, span, total);\n\t  var shortColumnIndex = getShortColumn(setY, buffer);\n\t\n\t  // Position the item\n\t  var point = new _point2.default(Math.round(gridSize * shortColumnIndex), Math.round(setY[shortColumnIndex]));\n\t\n\t  // Update the columns array with the new values for each column.\n\t  // e.g. before the update the columns could be [250, 0, 0, 0] for an item\n\t  // which spans 2 columns. After it would be [250, itemHeight, itemHeight, 0].\n\t  var setHeight = setY[shortColumnIndex] + itemSize.height;\n\t  for (var i = 0; i < span; i++) {\n\t    positions[shortColumnIndex + i] = setHeight;\n\t  }\n\t\n\t  return point;\n\t}\n\t\n\t/**\n\t * Determine the number of columns an items spans.\n\t * @param {number} itemWidth Width of the item.\n\t * @param {number} columnWidth Width of the column (includes gutter).\n\t * @param {number} columns Total number of columns\n\t * @param {number} threshold A buffer value for the size of the column to fit.\n\t * @return {number}\n\t */\n\tfunction getColumnSpan(itemWidth, columnWidth, columns, threshold) {\n\t  var columnSpan = itemWidth / columnWidth;\n\t\n\t  // If the difference between the rounded column span number and the\n\t  // calculated column span number is really small, round the number to\n\t  // make it fit.\n\t  if (Math.abs(Math.round(columnSpan) - columnSpan) < threshold) {\n\t    // e.g. columnSpan = 4.0089945390298745\n\t    columnSpan = Math.round(columnSpan);\n\t  }\n\t\n\t  // Ensure the column span is not more than the amount of columns in the whole layout.\n\t  return Math.min(Math.ceil(columnSpan), columns);\n\t}\n\t\n\t/**\n\t * Retrieves the column set to use for placement.\n\t * @param {number} columnSpan The number of columns this current item spans.\n\t * @param {number} columns The total columns in the grid.\n\t * @return {Array.<number>} An array of numbers represeting the column set.\n\t */\n\tfunction getAvailablePositions(positions, columnSpan, columns) {\n\t  // The item spans only one column.\n\t  if (columnSpan === 1) {\n\t    return positions;\n\t  }\n\t\n\t  // The item spans more than one column, figure out how many different\n\t  // places it could fit horizontally.\n\t  // The group count is the number of places within the positions this block\n\t  // could fit, ignoring the current positions of items.\n\t  // Imagine a 2 column brick as the second item in a 4 column grid with\n\t  // 10px height each. Find the places it would fit:\n\t  // [20, 10, 10, 0]\n\t  //  |   |   |\n\t  //  *   *   *\n\t  //\n\t  // Then take the places which fit and get the bigger of the two:\n\t  // max([20, 10]), max([10, 10]), max([10, 0]) = [20, 10, 0]\n\t  //\n\t  // Next, find the first smallest number (the short column).\n\t  // [20, 10, 0]\n\t  //          |\n\t  //          *\n\t  //\n\t  // And that's where it should be placed!\n\t  //\n\t  // Another example where the second column's item extends past the first:\n\t  // [10, 20, 10, 0] => [20, 20, 10] => 10\n\t  var available = [];\n\t\n\t  // For how many possible positions for this item there are.\n\t  for (var i = 0; i <= columns - columnSpan; i++) {\n\t    // Find the bigger value for each place it could fit.\n\t    available.push(arrayMax(positions.slice(i, i + columnSpan)));\n\t  }\n\t\n\t  return available;\n\t}\n\t\n\t/**\n\t * Find index of short column, the first from the left where this item will go.\n\t *\n\t * @param {Array.<number>} positions The array to search for the smallest number.\n\t * @param {number} buffer Optional buffer which is very useful when the height\n\t *     is a percentage of the width.\n\t * @return {number} Index of the short column.\n\t */\n\tfunction getShortColumn(positions, buffer) {\n\t  var minPosition = arrayMin(positions);\n\t  for (var i = 0, len = positions.length; i < len; i++) {\n\t    if (positions[i] >= minPosition - buffer && positions[i] <= minPosition + buffer) {\n\t      return i;\n\t    }\n\t  }\n\t\n\t  return 0;\n\t}\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=shuffle.js.map\n"]}