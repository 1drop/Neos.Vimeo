{"version":3,"sources":["onedrop.vimeo-grid.js"],"names":["arrayIncludes","array","value","indexOf","toArray","thing","Array","prototype","slice","call","Shuffle","window","shuffle","Demo","element","this","albums","document","querySelectorAll","easing","itemSelector","filters","_bindEventListeners","_onAlbumChange","_handleAlbumChange","bind","forEach","button","addEventListener","_getCurrentAlbumFilters","filter","classList","contains","map","getAttribute","evt","currentTarget","remove","btn","add","hasActiveFilters","itemPassesFilters","ALL_ITEMS","Object","keys","some","key","length","album","demo","querySelector"],"mappings":"AAGA,QAAAA,eAAAC,EAAAC,GACA,MAAAD,GAAAE,QAAAD,MAAA,EAIA,QAAAE,SAAAC,GACA,MAAAC,OAAAC,UAAAC,MAAAC,KAAAJ,GATA,GAAAK,SAAAC,OAAAC,QAYAC,KAAA,SAAAC,GACAC,KAAAC,OAAAZ,QAAAa,SAAAC,iBAAA,0BAEAH,KAAAH,QAAA,GAAAF,SAAAI,GACAK,OAAA,2CACAC,aAAA,UAGAL,KAAAM,SACAL,WAGAD,KAAAO,sBAMAT,MAAAN,UAAAe,oBAAA,WACAP,KAAAQ,eAAAR,KAAAS,mBAAAC,KAAAV,MAEAA,KAAAC,OAAAU,QAAA,SAAAC,GACAA,EAAAC,iBAAA,QAAAb,KAAAQ,iBACAR,OAOAF,KAAAN,UAAAsB,wBAAA,WACA,MAAAd,MAAAC,OAAAc,OAAA,SAAAH,GACA,MAAAA,GAAAI,UAAAC,SAAA,YACAC,IAAA,SAAAN,GACA,MAAAA,GAAAO,aAAA,iBAQArB,KAAAN,UAAAiB,mBAAA,SAAAW,GACA,GAAAR,GAAAQ,EAAAC,aAGAT,GAAAI,UAAAC,SAAA,UACAL,EAAAI,UAAAM,OAAA,WAEAtB,KAAAC,OAAAU,QAAA,SAAAY,GACAA,EAAAP,UAAAM,OAAA,YAGAV,EAAAI,UAAAQ,IAAA,WAGAxB,KAAAM,QAAAL,OAAAD,KAAAc,0BACAd,KAAAe,UAMAjB,KAAAN,UAAAuB,OAAA,WACAf,KAAAyB,mBACAzB,KAAAH,QAAAkB,OAAAf,KAAA0B,kBAAAhB,KAAAV,OAEAA,KAAAH,QAAAkB,OAAApB,QAAAgC,YASA7B,KAAAN,UAAAiC,iBAAA,WACA,MAAAG,QAAAC,KAAA7B,KAAAM,SAAAwB,KAAA,SAAAC,GACA,MAAA/B,MAAAM,QAAAyB,GAAAC,OAAA,GACAhC,OAQAF,KAAAN,UAAAkC,kBAAA,SAAA3B,GACA,GAAAE,GAAAD,KAAAM,QAAAL,OACAgC,EAAAlC,EAAAoB,aAAA,aAGA,SAAA,MAAAlB,EAAA,IAAAA,EAAA+B,OAAA,IAAA/C,cAAAgB,EAAAgC,KAGArC,OAAAsC,KAAA,GAAApC,MAAAI,SAAAiC,cAAA","file":"main.js","sourcesContent":["var Shuffle = window.shuffle;\n\n// ES7 will have Array.prototype.includes.\nfunction arrayIncludes(array, value) {\n    return array.indexOf(value) !== -1;\n}\n\n// Convert an array-like object to a real array.\nfunction toArray(thing) {\n    return Array.prototype.slice.call(thing);\n}\n\nvar Demo = function (element) {\n    this.albums = toArray(document.querySelectorAll('#vimeo-filters button'));\n\n    this.shuffle = new Shuffle(element, {\n        easing: 'cubic-bezier(0.165, 0.840, 0.440, 1.000)', // easeOutQuart\n        itemSelector: '.item'\n    });\n\n    this.filters = {\n        albums: []\n    };\n\n    this._bindEventListeners();\n};\n\n/**\n * Bind event listeners for when the filters change.\n */\nDemo.prototype._bindEventListeners = function () {\n    this._onAlbumChange = this._handleAlbumChange.bind(this);\n\n    this.albums.forEach(function (button) {\n        button.addEventListener('click', this._onAlbumChange);\n    }, this);\n};\n\n/**\n * Get the values of each `active` button.\n * @return {Array.<string>}\n */\nDemo.prototype._getCurrentAlbumFilters = function () {\n    return this.albums.filter(function (button) {\n        return button.classList.contains('active');\n    }).map(function (button) {\n        return button.getAttribute('data-value');\n    });\n};\n\n/**\n * A album button was clicked. Update filters and display.\n * @param {Event} evt Click event object.\n */\nDemo.prototype._handleAlbumChange = function (evt) {\n    var button = evt.currentTarget;\n\n    // Treat these buttons like radio buttons where only 1 can be selected.\n    if (button.classList.contains('active')) {\n        button.classList.remove('active');\n    } else {\n        this.albums.forEach(function (btn) {\n            btn.classList.remove('active');\n        });\n\n        button.classList.add('active');\n    }\n\n    this.filters.albums = this._getCurrentAlbumFilters();\n    this.filter();\n};\n\n/**\n * Filter shuffle based on the current state of filters.\n */\nDemo.prototype.filter = function () {\n    if (this.hasActiveFilters()) {\n        this.shuffle.filter(this.itemPassesFilters.bind(this));\n    } else {\n        this.shuffle.filter(Shuffle.ALL_ITEMS);\n    }\n};\n\n/**\n * If any of the arrays in the `filters` property have a length of more than zero,\n * that means there is an active filter.\n * @return {boolean}\n */\nDemo.prototype.hasActiveFilters = function () {\n    return Object.keys(this.filters).some(function (key) {\n        return this.filters[key].length > 0;\n    }, this);\n};\n\n/**\n * Determine whether an element passes the current filters.\n * @param {Element} element Element to test.\n * @return {boolean} Whether it satisfies all current filters.\n */\nDemo.prototype.itemPassesFilters = function (element) {\n    var albums = this.filters.albums;\n    var album = element.getAttribute('data-album');\n\n    // If there are active album filters and this album is not in that array.\n    return !(albums[0] != null && albums.length > 0 && !arrayIncludes(albums, album));\n};\n\nwindow.demo = new Demo(document.querySelector('#vimeo-grid'));\n"]}